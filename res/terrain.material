material terrain
{
    technique display
    {
        pass display
        {
            // shaders
            vertexShader = res/terrain.vert
            fragmentShader = res/terrain.frag

            //defines WIREFRAME

            // uniforms
            worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
            diffuseColor = 1.0, 1.0, 1.0, 1.0
            lightDirection = 0.5, 0.6, 0.2
            scale = 100.0
            textureRepeat = 40.0

            sampler texDirtDiffuse
            {
                path = res/textures/dirt-diffuse.png
                mipmap = true
                wrapS = REPEAT
                wrapT = REPEAT
                minFilter = NEAREST_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            sampler texDirtNormal
            {
                path = res/textures/dirt-normal.png
                mipmap = true
                wrapS = REPEAT
                wrapT = REPEAT
                minFilter = NEAREST_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            sampler texGrassDiffuse
            {
                path = res/textures/grass-diffuse.png
                mipmap = true
                wrapS = REPEAT
                wrapT = REPEAT
                minFilter = NEAREST_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            sampler texGrassNormal
            {
                path = res/textures/grass-normal.png
                mipmap = true
                wrapS = REPEAT
                wrapT = REPEAT
                minFilter = NEAREST_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            // render state
            renderState
            {
                cullFace = false
                depthTest = true
            }
        }
    }

    technique gbuffer
    {
        pass gbuffer
        {
            // shaders
            vertexShader = res/terrain_gbuffer.vert
            fragmentShader = res/terrain_gbuffer.frag

            // uniforms
            //worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
            worldViewMatrix = WORLD_VIEW_MATRIX
            projectionMatrix = PROJECTION_MATRIX
            scale = 100.0
            textureRepeat = 40.0

            sampler texDirtDiffuse
            {
                path = res/textures/dirt-diffuse.png
                mipmap = true
                wrapS = REPEAT
                wrapT = REPEAT
                minFilter = NEAREST_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            sampler texDirtNormal
            {
                path = res/textures/dirt-normal.png
                mipmap = true
                wrapS = REPEAT
                wrapT = REPEAT
                minFilter = NEAREST_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            sampler texGrassDiffuse
            {
                path = res/textures/grass-diffuse.png
                mipmap = true
                wrapS = REPEAT
                wrapT = REPEAT
                minFilter = NEAREST_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            sampler texGrassNormal
            {
                path = res/textures/grass-normal.png
                mipmap = true
                wrapS = REPEAT
                wrapT = REPEAT
                minFilter = NEAREST_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            // render state
            renderState
            {
                cullFace = false
                depthTest = true
            }
        }
    }
}